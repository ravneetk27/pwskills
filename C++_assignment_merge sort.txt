C++ assignment merge sort 

Ans 1: 
#include<iostream>
#include<vector>
using namespace std;
void merge(vector<int> &a,vector<int> &b,vector<int> &res){
    int i=0;
    int j=0;
    int k=0;
    while(i<a.size() && j<b.size()){
        if(a[i]>b[j]){
            res[k]=a[i];
            i++;
        }
        else{
            res[k]=b[j];
            j++;
        }
        k++;
    }
    if(j==b.size()){
    while (i < a.size()) {
        res[k++] = a[i++];
    }
    }

    if(i==a.size()){
    while (j < b.size()) {
        res[k++] = b[j++];
    }
    }
    
}

void mergesort(vector<int> &v){
    int n = v.size();
    if(n==1) return;
    int n1 = n/2;
    int n2 = n-n/2;
    vector<int> a(n1);
    vector<int> b(n2);
    for(int i=0 ;i<n1 ;i++){
        a[i]=v[i];
    }
    for(int i=0 ; i<n2 ; i++){
        b[i]=v[i+n1];
    }

    //recursion
    mergesort(a);
    mergesort(b);

    merge(a,b,v);

    a.clear();
    b.clear();
}
int main(){
    int a[]={20,19,53,0,1,5,4,7};
    int p = sizeof(a)/sizeof(a[0]);
    vector<int> v(a,a+p);
    mergesort(v);
    for(int i=0 ;i<v.size() ;i++){
        cout<<v[i]<<" ";
    }
    
}